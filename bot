import discord
from discord.ext import commands, tasks
import random
import discord
from discord.ext import commands
import requests

intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
bot = commands.Bot(command_prefix='!', intents=intents)

@bot.command()
async def sa(ctx):
    await ctx.send(f'Aleykümselam Ey Mümin Kardeşim, {ctx.author.mention}Hoşgeldin!')

@bot.command()
async def Sü(ctx):
    await ctx.send(f'Ronaldooooooooooooooooooo')

@bot.command()
async def Neden(ctx):
    await ctx.send(f'Kaplumba Deden🐢')



@bot.command()
async def Nasılsın(ctx):
    await ctx.send(f'Burnun Kapıya Kısılsın :))))')

@bot.command()
async def Destur(ctx):
    await ctx.send(f'Buyurasın')

@bot.command()
async def Nub(ctx):
    await ctx.send(f'Ya Ömer Nub musun?')



@bot.event
async def on_ready():
    print(f'E Hadi Ozaman ')

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    
    if message.content.lower() == "coin":
        coinler[message.author.id] = coinler.get(message.author.id, 0) + 100
        await message.channel.send(f"{message.author.mention}, yüz coin kazandın! Toplam coin sayın: {coinler[message.author.id]}")
    
    await bot.process_commands(message)

@bot.command()
async def coin(ctx):
    coins = coinler.get(ctx.author.id, 0)
    coinler[ctx.author.id] = coins + 100
    await ctx.send(f"{ctx.author.mention}, bir coin kazandın! Toplam coin miktarınız: {coinler[ctx.author.id]}")



@bot.command()
async def oyun(ctx):
    await ctx.send("Oyunlar: \n1. Zar Oyunu: `!zar 2d6` komutuyla zar atın. \n2. Taş-Kağıt-Makas: `!tkm [taş/kağıt/makas]` komutuyla oynayın. \n3. Tahmin Oyunu: `!tahmin [1-10]` komutuyla rastgele bir sayıyı tahmin edin. \n4. Adam Asmaca: `!adamasmaca` komutuyla oynayın. \n5. Yazı Tura: `!yazı_tura` komutuyla oynayın. \n6. Sayı Tahmin: `!sayı_tahmin [1-100]` komutuyla rastgele bir sayıyı tahmin edin. \n7. İddaa: `!idda [bahis_miktarı] [tahmin]` komutuyla bahis yapın.")

@bot.command()
async def zar(ctx, zar: str):
    zar_sayilari = zar.split('d')
    if len(zar_sayilari) != 2 or not zar_sayilari[0].isdigit() or not zar_sayilari[1].isdigit():
        await ctx.send("Geçersiz zar formatı. Örnek: `!zar 2d6`")
        return

    zar_adedi = int(zar_sayilari[0])
    zar_yuzleri = int(zar_sayilari[1])

    if zar_adedi <= 0 or zar_yuzleri <= 0:
        await ctx.send("Zar adedi ve yüz sayısı pozitif tam sayı olmalıdır.")
        return

    atislar = [randmo.randint(1, zar_yuzleri) for _ in range(zar_adedi)]
    await ctx.send(f"{ctx.author.mention}, {zar_adedi} adet {zar_yuzleri} yüzlü zar atışı sonucu: {atislar}")

@bot.command()
async def tkm(ctx, kullanıcı_seçimi: str):
    secenekler = ['taş', 'kağıt', 'makas']
    kullanıcı_seçimi = kullanıcı_seçimi.lower()
    
    if kullanıcı_seçimi not in secenekler:
        await ctx.send("Geçersiz seçim! Lütfen 'taş', 'kağıt' veya 'makas' seçeneklerinden birini girin.")
        return
    
    bot_seçimi = random.choice(secenekler)
    await ctx.send(f"Botun seçimi: {bot_seçimi}")
    
    if kullanıcı_seçimi == bot_seçimi:
        await ctx.send("Berabere!")
    elif (kullanıcı_seçimi == 'taş' and bot_seçimi == 'makas') or \
         (kullanıcı_seçimi == 'kağıt' and bot_seçimi == 'taş') or \
         (kullanıcı_seçimi == 'makas' and bot_seçimi == 'kağıt'):
        await ctx.send("Tebrikler! Kazandınız.")
    else:
        await ctx.send("Üzgünüm! Kaybettiniz.")

@bot.command()
async def tahmin(ctx, sayı: int):
    dogru_sayi = random.randint(1, 10)
    if sayı == dogru_sayi:
        await ctx.send("Tebrikler! Doğru tahmin ettiniz.")
    else:
        await ctx.send(f"Maalesef, doğru sayıyı bulamadınız. Doğru sayı: {dogru_sayi}")
        




@bot.command()
async def adamasmaca(ctx):
    kelimeler = ['python', 'java', 'javascript', 'ruby', 'swift', 'kotlin', 'csharp', 'html', 'css', 'react']
    hak = 10
    kelime = random.choice(kelimeler)
    dogru_tahmin = ['_' for _ in range(len(kelime))]
    kullanilan_harfler = []

    await ctx.send("Adam asmaca oyununa hoş geldiniz!\nKelime: " + ' '.join(dogru_tahmin))

    while hak > 0:
        await ctx.send("Tahmin etmek için bir harf yazın:")
        tahmin_mesaji = await bot.wait_for('message', check=lambda message: message.author == ctx.author)
        tahmin = tahmin_mesaji.content.lower()

        if tahmin in kullanilan_harfler:
            await ctx.send("Bu harfi zaten denediniz. Lütfen başka bir harf deneyin.")
            continue

        if len(tahmin) != 1 or not tahmin.isalpha():
            await ctx.send("Geçersiz giriş! Lütfen sadece bir harf girin.")
            continue

        kullanilan_harfler.append(tahmin)

        if tahmin in kelime:
            for i in range(len(kelime)):
                if kelime[i] == tahmin:
                    dogru_tahmin[i] = tahmin
            await ctx.send("Doğru tahmin! Kelime: " + ' '.join(dogru_tahmin))
            if '_' not in dogru_tahmin:
                await ctx.send("Tebrikler! Kelimeyi doğru tahmin ettiniz.")
                return
        else:
            hak -= 1
            await ctx.send(f"Yanlış tahmin! Kalan hak: {hak}\nKelime: " + ' '.join(dogru_tahmin))
    
    await ctx.send(f"Maalesef, hakkınız tükendi. Doğru kelime: {kelime}")

@bot.command()
async def yazı_tura(ctx):
    secenekler = ['yazı', 'tura']
    bot_seçimi = random.choice(secenekler)
    await ctx.send(f"Botun seçimi: {bot_seçimi}")

@bot.command()
async def sayı_tahmin(ctx, tahmin: int):
    dogru_sayi = random.randint(1, 100)
    if tahmin == dogru_sayi:
        await ctx.send("Tebrikler! Doğru tahmin ettiniz.")
    elif tahmin < dogru_sayi:
        await ctx.send("Daha büyük bir sayı tahmin edin.")
    else:
        await ctx.send("Daha küçük bir sayı tahmin edin.")

@bot.command()
async def idda(ctx, bahis_miktarı: int, tahmin: int):
    if coinler.get(ctx.author.id, 0) >= bahis_miktarı:
        coinler[ctx.author.id] -= bahis_miktarı
        dogru_sayi = random.randint(1, 10)
        if tahmin == dogru_sayi:
            kazanç = bahis_miktarı * 2
            coinler[ctx.author.id] += kazanç
            await ctx.send(f"{ctx.author.mention}, tebrikler! Tahmin doğru. {kazanç} coin kazandınız. Toplam coin sayınız: {coinler[ctx.author.id]}")
        else:
            await ctx.send(f"{ctx.author.mention}, maalesef tahmin yanlış. Bahis miktarınızı kaybettiniz. Toplam coin sayınız: {coinler[ctx.author.id]}")
    else:
        await ctx.send(f"{ctx.author.mention}, yeterli coininiz yok!")


@bot.command()
async def rastgele(ctx):
    sayi = random.randint(1, 100)
    await ctx.send(f"Rastgele sayı: {sayi}")


@bot.command()
async def rfy(ctx, üye: discord.Member = None):
    üye = üye or ctx.author
    await ctx.send("https://dxcgs7v732qty.cloudfront.net/kopekler.jpg")


@bot.command(aliases=["helpme"])
async def destek(ctx):
     await ctx.send("Destek almak için: [https://discord.com/channels/1229837152578306068/1229837152578306071]")


@bot.command()
async def yardım(ctx):
    bot_info_message = """
🌟 Kovana Hoşgeldin Dostum! 🌟

Muhtar ile eğlenceli vakit geçirmeye hazır mısın? İşte birkaç komut:

**Oyunlar:**
  🎮 `,oyun` komutuyla oyunları görebilirsin. Kelime tahmini, sayı tahmini, taş-kağıt-makas ve daha fazlası seni bekliyor!

**Coin Kazanma:**
  💰 Mesaj yazarak veya oyunlar oynayarak coin kazanabilirsin. Coinlerle evcil hayvanlar satın alabilir ve daha fazla eğlenceli aktivitelere katılabilirsin. `,coin` komutuyla coin miktarını kontrol edebilirsin.

**Evcil Hayvanlar:**
  🐾 Evcil hayvanlar, coin kazancını artırmanın harika bir yoludur. `,pet_al [hayvan]` komutuyla kedi, köpek, kuş gibi sevimli hayvanları satın alabilir ve `!kuşan [hayvan]` komutuyla onları kuşatabilirsin.

**Diğer Komutlar:**
  📜 ASCII sanatı oluşturmak için `,rastgele_ascii` komutunu kullanabilirsin.
  📋 Yardım veya destek almak için `,destek` komutunu kullanabilirsin.

**Özel Komutlar:**
  🛡️ Sunucu yöneticileri için, mesajları temizlemek ve diğer moderasyon işlemlerini gerçekleştirmek için `!temizle [miktar]` komutunu kullanabilirsin.
  🎰 Başkan Seçmek İçin `,oy_kullan [seçenek1, seçenek2, ...]` komutunu kullanarak rastgele bir seçenek belirleyebilirsin.

**Yardım ve Destek:**
  ❓ Yardım veya destek almak için `,destek` komutunu kullanabilirsin. Ayrıca sorularınızı veya önerilerinizi bize iletin, her zaman yardımcı olmaktan mutluluk duyarız!
    """
    await ctx.send(bot_info_message)


@bot.command()
async def bot_davet(ctx):
    await ctx.send("Botun davet linki: [https://discord.com/oauth2/authorize?client_id=1230229132114264205&permissions=8&scope=bot]")



@bot.command()
async def ne(ctx):
    await ctx.send("Ben bir yapay zeka botuyum, yardımcı olabileceğim konular hakkında sorularınızı sorabilirsiniz.")

@bot.command()
async def öneri(ctx, *, öneri: str):
    kanal = bot.get_channel(1231300417741127833)  
    await kanal.send(f"{ctx.author.mention} tarafından öneri: {öneri}")




allowed_users = [949598383952236595, 813471817494298656]
coinler = {}
kullanici_listesi = []

@bot.command()
async def kullanici_ekle(ctx, kullanici: discord.Member):
    if ctx.author.id not in allowed_users:
        await ctx.send("Bu komutu kullanma izniniz yok.")
        return
    
    if kullanici.id in kullanici_listesi:
        await ctx.send("Bu kullanıcı zaten ekli.")
        return

    kullanici_listesi.append(kullanici.id)
    await ctx.send(f"{kullanici.name} başarıyla kullanıcı listesine eklendi.")

@bot.command()
async def kullanici_sil(ctx, kullanici: discord.Member):
    if ctx.author.id not in allowed_users:
        await ctx.send("Bu komutu kullanma izniniz yok.")
        return
    
    if kullanici.id not in kullanici_listesi:
        await ctx.send("Bu kullanıcı listede yok.")
        return

    kullanici_listesi.remove(kullanici.id)
    await ctx.send(f"{kullanici.name} başarıyla kullanıcı listesinden silindi.")

@bot.command()
async def kullanici_kontrol(ctx, kullanici: discord.Member):
    if kullanici.id in kullanici_listesi:
        await ctx.send(f"{kullanici.name} listede.")
    else:
        await ctx.send(f"{kullanici.name} listede değil.")

@bot.command()
async def coin_sifirla(ctx):
    if ctx.author.id not in allowed_users:
        await ctx.send("Bu komutu kullanma izniniz yok.")
        return
    
    coinler.clear()
    await ctx.send("Tüm coinler sıfırlandı.")


@bot.command()
async def rastgele_yazi(ctx):
    yazi = random.choice(["Selam!", "Nasılsınız?", "Merhaba!", "Hoş geldiniz!"])
    await ctx.send(yazi)

@bot.command()
async def kullanici_listesi(ctx):
    if ctx.author.id not in allowed_users:
        await ctx.send("Bu komutu kullanma izniniz yok.")
        return
    
    if not kullanici_listesi:
        await ctx.send("Kullanıcı listesi boş.")
        return

    liste = "\n".join([bot.get_user(user_id).name for user_id in kullanici_listesi])
    await ctx.send(f"Kullanıcı Listesi:\n{liste}")

@bot.command()
async def rastgele_renk(ctx):
    renk = "%06x" % random.randint(0, 0xFFFFFF)
    await ctx.send(f"Rastgele Renk: #{renk}")

@bot.command()
async def yazi_sayac(ctx, *, metin: str):
    harf_sayisi = len(metin.replace(" ", ""))
    kelime_sayisi = len(metin.split())
    cumle_sayisi = metin.count(".") + metin.count("!") + metin.count("?")
    await ctx.send(f"Harf Sayısı: {harf_sayisi}\nKelime Sayısı: {kelime_sayisi}\nCümle Sayısı: {cumle_sayisi}")

@bot.command()
async def rastgele_emoji(ctx):
    emojis = ["😀", "😂", "😊", "🎉", "👍"]
    await ctx.send(random.choice(emojis))


@bot.command()
async def oy_kullan(ctx, *, secenekler: str):
    """
    ℹ️ Oy Kullanma Komutu
    Belirtilen seçenekler arasından rastgele bir seçenek seçer.
    Kullanım: !oy_kullan seçenek1, seçenek2, seçenek3, ...
    """
    secenek_listesi = secenekler.split(",")
    secenek = random.choice(secenek_listesi)
    await ctx.send(f"Seçilen Seçenek: {secenek.strip()}")
    if secenek in oylar:
        oylar[secenek] += 1
    else:
        oylar[secenek] = 1

@bot.command()
async def oysay(ctx):
    """
    ℹ️ Oy Sayma Komutu
    Kullanıcıların verdiği oyları sayar.
    Kullanım: ,oysay
    """
    if not oylar:
        await ctx.send("Henüz hiç oy verilmemiş.")
        return

    oy_sayisi = "\n".join([f"{secenek}: {oy}" for secenek, oy in oylar.items()])
    await ctx.send(f"Oylar:\n{oy_sayisi}")

@bot.command()
async def yazı_ters_cevir(ctx, *, metin: str):
    ters_metin = metin[::-1]
    await ctx.send(ters_metin)



@bot.command()
async def rastgele_kullanici(ctx):
    rastgele_kullanici = random.choice(ctx.guild.members)
    await ctx.send(f"Rastgele Kullanıcı: {rastgele_kullanici.mention}")

@bot.command()
async def sansli_sayi(ctx):
    sansli_sayi = random.randint(1, 100)
    await ctx.send(f"Şanslı Sayınız: {sansli_sayi}")

@bot.command()
async def rastgele_ascii(ctx):
    ascii_sanati = [
        """
         ___
        / _ \\
        | | | |
        | |_| |
        \___/
        """,
        """
        (__) 
        (oo) 
        /--\\ 
        |  | 
        ||-||
        """,
        
    ]
    await ctx.send(random.choice(ascii_sanati))


@bot.command()
async def kullanici_bilgisi(ctx, kullanici: discord.Member = None):
    kullanici = kullanici or ctx.author
    embed = discord.Embed(title=f"{kullanici.name} Bilgisi", description="", color=0x00ff00)
    embed.add_field(name="ID", value=kullanici.id, inline=True)
    embed.add_field(name="Oluşturulma Tarihi", value=kullanici.created_at.strftime("%Y-%m-%d %H:%M:%S"), inline=True)
    embed.add_field(name="Sunucuya Katılma Tarihi", value=kullanici.joined_at.strftime("%Y-%m-%d %H:%M:%S"), inline=True)
    embed.set_thumbnail(url=kullanici.avatar_url)
    await ctx.send(embed=embed)

@bot.command()
async def sunucu_istatistikleri(ctx):
    embed = discord.Embed(title="Sunucu İstatistikleri", description="", color=0x00ff00)
    embed.add_field(name="Aktif Üye Sayısı", value=len(ctx.guild.members), inline=True)
    embed.add_field(name="Rol Sayısı", value=len(ctx.guild.roles), inline=True)
    embed.add_field(name="Kanal Sayısı", value=len(ctx.guild.channels), inline=True)
    await ctx.send(embed=embed)

@bot.command()
async def ping(ctx):
    await ctx.send(f"Pong! {round(bot.latency * 1000)}ms")

@bot.command()
@commands.has_permissions(manage_messages=True)
async def temizle(ctx, miktar: int):
    await ctx.channel.purge(limit=miktar + 1)
    await ctx.send(f"{miktar} mesaj silindi.", delete_after=5)



evcil_hayvanlar = {
    "kedi": {"fiyat": 200, "resim_url": "resim_url_kedi"},
    "köpek": {"fiyat": 300, "resim_url": "resim_url_köpek"},
    "kuş": {"fiyat": 150, "resim_url": "resim_url_kuş"}
}


coinler = {}

@bot.command()
async def pet_al(ctx, hayvan: str):
    hayvan = hayvan.lower()
    if hayvan not in evcil_hayvanlar:
        await ctx.send("Böyle bir evcil hayvan bulunmamaktadır.")
        return
    
    fiyat = evcil_hayvanlar[hayvan]["fiyat"]
    if coinler.get(ctx.author.id, 0) < fiyat:
        await ctx.send("Yeterli coininiz yok.")
        return
    
    coinler[ctx.author.id] -= fiyat
    # Burada kullanıcının envanterine evcil hayvanı ekleyebilirsiniz.
    await ctx.send(f"{ctx.author.mention}, {hayvan} satın alındı!")

@bot.command()
async def coin_göster(ctx):
    coins = coinler.get(ctx.author.id, 0)
    await ctx.send(f"{ctx.author.mention}, Toplam coin miktarınız: {coins}")

@bot.command()
async def evcil_hayvanları_göster(ctx):
    hayvan_listesi = "\n".join([f"{hayvan.capitalize()} - Fiyat: {evcil_hayvanlar[hayvan]['fiyat']}" for hayvan in evcil_hayvanlar])
    await ctx.send(f"{ctx.author.mention}, Satın alabileceğiniz evcil hayvanlar:\n{hayvan_listesi}")

@bot.command()
async def evcil_hayvan_kuşat(ctx, hayvan: str):
    hayvan = hayvan.lower()
    if hayvan not in evcil_hayvanlar:
        await ctx.send("Böyle bir evcil hayvan bulunmamaktadır.")
        return
    
    # Burada kullanıcının profil fotoğrafını belirli bir evcil hayvanın resmi ile değiştirebilirsiniz.
    await ctx.send(f"{ctx.author.mention}, Profil fotoğrafınız {hayvan} ile değiştirildi!")

@bot.command()
async def rastgele_pet(ctx):
    hayvan = random.choice(list(evcil_hayvanlar.keys()))
    await ctx.send(f"{ctx.author.mention}, Size rastgele bir {hayvan} hediye edildi!")

@bot.command()
async def gül(ctx, hedef: discord.Member):
   
    gönderici = ctx.author
    hedef_adı = hedef.name

    # Gül mesajı oluştur
    gül_mesajı = f"{gönderici.mention} sana gül veriyor, {hedef_adı}! 🌹"

    # Gülü belirtilen kişiye gönder
    await ctx.send(gül_mesajı)

@bot.command()
@commands.has_permissions(ban_members=True)
async def ban(ctx, member: discord.Member, *, reason=None):
    await member.ban(reason=reason)
    await ctx.send(f"{member.mention} kullanıcısı banlandı.")


@bot.command()
@commands.has_permissions(manage_roles=True)
async def mute(ctx, member: discord.Member, *, reason=None):
    muted_role = discord.utils.get(ctx.guild.roles, name="Muted")
    if not muted_role:
        muted_role = await ctx.guild.create_role(name="Muted")
        for channel in ctx.guild.channels:
            await channel.set_permissions(muted_role, speak=False, send_messages=False)
    await member.add_roles(muted_role, reason=reason)
    await ctx.send(f"{member.mention} kullanıcısı susturuldu.")

@bot.command()
@commands.has_permissions(manage_roles=True)
async def mute_kaldir(ctx, member: discord.Member):
    muted_role = discord.utils.get(ctx.guild.roles, name="Muted")
    if muted_role in member.roles:
        await member.remove_roles(muted_role)
        await ctx.send(f"{member.mention} kullanıcısının susturması kaldırıldı.")
    else:
        await ctx.send(f"{member.mention} kullanıcısı zaten susturulmamış.")



@bot.command()
@commands.has_permissions(manage_channels=True)
async def kanal_sustur(ctx, channel: discord.TextChannel):
    await channel.set_permissions(ctx.guild.default_role, send_messages=False)
    await ctx.send(f"{channel.mention} kanalı susturuldu.")


@bot.command()
@commands.has_permissions(manage_channels=True)
async def kanal_sustur_kaldir(ctx, channel: discord.TextChannel):
    await channel.set_permissions(ctx.guild.default_role, send_messages=True)
    await ctx.send(f"{channel.mention} kanalının susturulması kaldırıldı.")

@bot.command()
async def oy_say(ctx):
    oy_sonucu = "\n".join([f"{secenek}: {oy_sayac[secenek]}" for secenek in oy_sayac])
    await ctx.send(f"Oyların Sonucu:\n{oy_sonucu}")


@bot.command()
async def havadurumu(ctx, *, sehir):
    """
    ℹ️ Hava Durumu Komutu
    Bu komut, belirtilen şehrin hava durumunu gösterir.
    Kullanım: !havadurumu [şehir]
    """
    api_key = "989cfad80bd803b4349e94670869282d"  
    base_url = "http://api.openweathermap.org/data/2.5/weather?"
    complete_url = base_url + "q=" + sehir + "&appid=" + api_key + "&units=metric"
    response = requests.get(complete_url)
    data = response.json()
    if data["cod"] != "404":
        main = data["main"]
        wind = data["wind"]
        weather_desc = data["weather"][0]["description"]
        temperature = main["temp"]
        feels_like = main["feels_like"]
        humidity = main["humidity"]
        wind_speed = wind["speed"]
        await ctx.send(f"🌤️ {sehir} hava durumu:\n"
                       f"🌡️ Sıcaklık: {temperature}°C\n"
                       f"🌡️ Hissedilen Sıcaklık: {feels_like}°C\n"
                       f"💧 Nem: {humidity}%\n"
                       f"🌬️ Rüzgar Hızı: {wind_speed} m/s\n"
                       f"📝 Hava Durumu: {weather_desc}")
    else:
        await ctx.send("❌ Şehir bulunamadı!")


gunluk_gorevler = [
    "Doğa yürüyüşü yap ve çöpleri topla.",
    "Bahçende veya çevrende çöpleri topla ve düzenle.",
    "Atıkları geri dönüşüm kutularına ayır ve kompost yap.",
    "Su tasarrufu yapmak için bugün daha dikkatli ol.",
    "Çevre dostu alışkanlıklar hakkında bilgi paylaş ve farkındalık yarat."
]


@bot.command()
async def gunluk_gorev(ctx):
    gunun_gorevi = random.choice(gunluk_gorevler)
    await ctx.send(f"Bugün yapman gereken görev: {gunun_gorevi}")

@bot.event
async def on_member_join(member):
    
    role_id = 1231300356407820348 
    role = member.guild.get_role(role_id)
    if role:
        try:
            await member.add_roles(role)
            print(f'Rol başarıyla {member} kullanıcısına atandı.')
        except Exception as e:
            print(f'Rol atanırken bir hata oluştu: {e}')
    else:
        print('Rol bulunamadı. Lütfen doğru rol ID\'sini girdiğinizden emin olun.')


WELCOME_CHANNEL_ID = 1231300407888707708
GOODBYE_CHANNEL_ID = 1231300407888707708

@bot.event
async def on_ready():
    print(f'Bot is online! Logged in as {bot.user}')

@bot.event
async def on_member_join(member):
    channel = bot.get_channel(WELCOME_CHANNEL_ID)
    if channel:
        await channel.send(f'Hoş geldin, {member.mention}! Sunucumuza katıldığın için çok mutluyuz!')
    else:
        print('Hoş geldin mesajı kanalı bulunamadı.')

@bot.event
async def on_member_remove(member):
    channel = bot.get_channel(GOODBYE_CHANNEL_ID)
    if channel:
        await channel.send(f'{member} aramızdan ayrıldı. Umarım tekrar görüşürüz!')
    else:
        print('Güle güle mesajı kanalı bulunamadı.')

        movies = [
    'The Shawshank Redemption',
    'The Godfather',
    'The Dark Knight',
    'Pulp Fiction',
    'Forrest Gump',
    'Inception',
    'Fight Club',
    'The Matrix',
    'The Lord of the Rings: The Return of the King',
    'Interstellar'
]

tv_shows = [
    'Breaking Bad',
    'Game of Thrones',
    'Stranger Things',
    'The Crown',
    'The Mandalorian',
    'The Witcher',
    'Sherlock',
    'Friends',
    'The Office',
    'Westworld'
]


@bot.command(name='film_öner', help='Rastgele bir film önerir.')
async def recommend_movie(ctx):
    movie = random.choice(movies)
    await ctx.send(f'İzlemenizi önerdiğim film: **{movie}**')

@bot.command(name='dizi_öner', help='Rastgele bir dizi önerir.')
async def recommend_tv_show(ctx):
    tv_show = random.choice(tv_shows)
    await ctx.send(f'İzlemenizi önerdiğim dizi: **{tv_show}**')



bot.run('ASDASDASD')
